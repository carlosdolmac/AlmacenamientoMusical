/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package view;

import com.formdev.flatlaf.FlatClientProperties;
import controller.HibernateHelper;
import controller.MensajesInternacionales;
import controller.PrincipalController;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos de los Dolores Macías
 */
public class AnadirPlaylist extends javax.swing.JPanel {

    HibernateHelper hibernateHelper = new HibernateHelper();
    private PrincipalController principalController;
    
    public AnadirPlaylist(PrincipalController principalController) {
        initComponents();
        this.principalController = principalController;
        labelBiblioteca.putClientProperty( "FlatLaf.styleClass", "h1" );
        labelPlaylists.putClientProperty( "FlatLaf.styleClass", "h1" );
        labelAnadirPlaylist.putClientProperty( "FlatLaf.styleClass", "h1" );
        nombrePlaylist.putClientProperty( FlatClientProperties.PLACEHOLDER_TEXT,MensajesInternacionales.obtenerMensaje("placeholder.favoritas")); //Placeholder
        
        //Titulos
        labelBiblioteca.setText(MensajesInternacionales.obtenerMensaje("label.biblioteca"));
        labelPlaylists.setText(MensajesInternacionales.obtenerMensaje("label.playlists"));
        labelAnadirPlaylist.setText(MensajesInternacionales.obtenerMensaje("button.anadirplaylist"));
        labelNombre.setText(MensajesInternacionales.obtenerMensaje("label.nombreplaylists"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondoAnadirCancionAPlaylist = new javax.swing.JPanel();
        labelBiblioteca = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelPlaylists = new javax.swing.JLabel();
        labelAnadirPlaylist = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        nombrePlaylist = new javax.swing.JTextField();
        guardarPlaylist = new javax.swing.JButton();

        fondoAnadirCancionAPlaylist.setBackground(new java.awt.Color(244, 246, 248));

        labelBiblioteca.setForeground(new java.awt.Color(153, 153, 153));
        labelBiblioteca.setText("Biblioteca");
        labelBiblioteca.setToolTipText("Al pulsar te lleva a Biblioteca");
        labelBiblioteca.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelBiblioteca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBibliotecaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelBibliotecaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelBibliotecaMouseExited(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mayor.png"))); // NOI18N

        labelPlaylists.setForeground(new java.awt.Color(153, 153, 153));
        labelPlaylists.setText("Playlists");
        labelPlaylists.setToolTipText("Al pulsar te lleva a  Playlist");
        labelPlaylists.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelPlaylists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelPlaylistsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelPlaylistsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelPlaylistsMouseExited(evt);
            }
        });

        labelAnadirPlaylist.setText("Añadir Playlist");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mayor.png"))); // NOI18N

        labelNombre.setText("Nombre de la Playlist");

        nombrePlaylist.setBackground(new java.awt.Color(244, 246, 248));
        nombrePlaylist.setToolTipText("Introduce el nombre que quieras ponerle a tu Playlist");
        nombrePlaylist.setPreferredSize(new java.awt.Dimension(340, 38));
        nombrePlaylist.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombrePlaylistKeyPressed(evt);
            }
        });

        guardarPlaylist.setBackground(new java.awt.Color(139, 243, 204));
        guardarPlaylist.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardarPlaylist.setText("Guardar Playlist");
        guardarPlaylist.setToolTipText("Pulsa para guardar la playlist");
        guardarPlaylist.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarPlaylist.setPreferredSize(new java.awt.Dimension(162, 46));
        guardarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fondoAnadirCancionAPlaylistLayout = new javax.swing.GroupLayout(fondoAnadirCancionAPlaylist);
        fondoAnadirCancionAPlaylist.setLayout(fondoAnadirCancionAPlaylistLayout);
        fondoAnadirCancionAPlaylistLayout.setHorizontalGroup(
            fondoAnadirCancionAPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(fondoAnadirCancionAPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                        .addComponent(labelBiblioteca)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20)
                        .addComponent(labelPlaylists)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17)
                        .addComponent(labelAnadirPlaylist))
                    .addComponent(labelNombre)
                    .addComponent(nombrePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(604, Short.MAX_VALUE))
        );
        fondoAnadirCancionAPlaylistLayout.setVerticalGroup(
            fondoAnadirCancionAPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                .addGroup(fondoAnadirCancionAPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(labelBiblioteca)
                        .addGap(61, 61, 61)
                        .addComponent(labelNombre)
                        .addGap(18, 18, 18)
                        .addComponent(nombrePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1))
                    .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(labelPlaylists))
                    .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2))
                    .addGroup(fondoAnadirCancionAPlaylistLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(labelAnadirPlaylist)))
                .addGap(162, 162, 162)
                .addComponent(guardarPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondoAnadirCancionAPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondoAnadirCancionAPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void labelPlaylistsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelPlaylistsMouseClicked
        principalController.mostrarPlaylists();
    }//GEN-LAST:event_labelPlaylistsMouseClicked

    private void labelBibliotecaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBibliotecaMouseClicked
        principalController.mostrarBiblioteca();
    }//GEN-LAST:event_labelBibliotecaMouseClicked

    private void labelPlaylistsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelPlaylistsMouseEntered
        labelPlaylists.setForeground(Color.black);
    }//GEN-LAST:event_labelPlaylistsMouseEntered

    private void labelPlaylistsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelPlaylistsMouseExited
        labelPlaylists.setForeground(Color.gray);
    }//GEN-LAST:event_labelPlaylistsMouseExited

    private void labelBibliotecaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBibliotecaMouseEntered
        labelBiblioteca.setForeground(Color.black);
    }//GEN-LAST:event_labelBibliotecaMouseEntered

    private void labelBibliotecaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBibliotecaMouseExited
        labelBiblioteca.setForeground(Color.gray);
    }//GEN-LAST:event_labelBibliotecaMouseExited

    private void guardarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPlaylistActionPerformed
        String nombrePlaylistTexto = nombrePlaylist.getText(); // Obtener el nombre de la playlist desde el campo de texto

        if (nombrePlaylistTexto != null && !nombrePlaylistTexto.isEmpty()) {
            // Verificar que el nombre de la playlist no esté vacío

            try {
                boolean guardadoExitoso = hibernateHelper.guardarPlaylist(nombrePlaylistTexto);

                if (guardadoExitoso) {
                    // Mostrar un mensaje de éxito si la playlist se guardó correctamente
                    JOptionPane.showMessageDialog(this, "Playlist guardada exitosamente");
                    
                    nombrePlaylist.setText("");
                } else {
                    // Mostrar un mensaje de error si hubo algún problema al guardar la playlist
                    JOptionPane.showMessageDialog(this, "Error al guardar la playlist");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al guardar la playlist");
            }
        } else {
            // Mostrar un mensaje de error si el nombre de la playlist está vacío
            JOptionPane.showMessageDialog(this, "El nombre de la playlist no puede estar vacío");
        }
    }//GEN-LAST:event_guardarPlaylistActionPerformed

    private void nombrePlaylistKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombrePlaylistKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            guardarPlaylistActionPerformed(new java.awt.event.ActionEvent(this, 0, ""));
        }
    }//GEN-LAST:event_nombrePlaylistKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fondoAnadirCancionAPlaylist;
    private javax.swing.JButton guardarPlaylist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelAnadirPlaylist;
    private javax.swing.JLabel labelBiblioteca;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelPlaylists;
    private javax.swing.JTextField nombrePlaylist;
    // End of variables declaration//GEN-END:variables

}
