/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import com.formdev.flatlaf.FlatClientProperties;
import controller.EmailController;
import controller.HibernateHelper;
import controller.LoginController;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos de los Dolores Macías
 */
public class Password extends javax.swing.JPanel {
    private LoginController loginController;
    private String codigoRecuperacion;
    private String correoRecuperacion;
    /**
     * Creates new form Password
     */
    public Password(Interfaz interfaz, LoginController loginController) {
        initComponents();
        this.loginController = loginController; // Inicializa el loginController
         email.putClientProperty( FlatClientProperties.PLACEHOLDER_TEXT, "Email" ); //Placeholder
         code.putClientProperty( FlatClientProperties.PLACEHOLDER_TEXT, "Código" ); //Placeholder
    }

    // Método para obtener el código de recuperación desde fuera de la clase
    public String getCodigoRecuperacion() {
        return codigoRecuperacion;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondoPassword = new javax.swing.JPanel();
        email = new javax.swing.JTextField();
        recuperar = new javax.swing.JButton();
        cambiar = new javax.swing.JButton();
        code = new javax.swing.JTextField();

        fondoPassword.setBackground(new java.awt.Color(204, 0, 153));

        email.setPreferredSize(new java.awt.Dimension(575, 47));

        recuperar.setText("Recuperar");
        recuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recuperarActionPerformed(evt);
            }
        });

        cambiar.setText("Cambiar");
        cambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarActionPerformed(evt);
            }
        });

        code.setPreferredSize(new java.awt.Dimension(575, 47));

        javax.swing.GroupLayout fondoPasswordLayout = new javax.swing.GroupLayout(fondoPassword);
        fondoPassword.setLayout(fondoPasswordLayout);
        fondoPasswordLayout.setHorizontalGroup(
            fondoPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoPasswordLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(fondoPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(fondoPasswordLayout.createSequentialGroup()
                        .addComponent(recuperar, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fondoPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(607, Short.MAX_VALUE))
        );
        fondoPasswordLayout.setVerticalGroup(
            fondoPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoPasswordLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(fondoPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recuperar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(304, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondoPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondoPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void recuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recuperarActionPerformed
        String userEmail = email.getText(); // Obtener el correo electrónico ingresado en la interfaz
        HibernateHelper hibernateHelper = new HibernateHelper();

        if (hibernateHelper.existeCorreo(userEmail)) {
            codigoRecuperacion = EmailController.generarCodigoRecuperacion();
            EmailController.enviarCorreoRecuperacion(userEmail, codigoRecuperacion);
            // Mensaje de éxito al enviar el correo
            JOptionPane.showMessageDialog(
                null,
                "Se ha enviado un correo con el código de recuperación.",
                "Correo enviado",
                JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                null,
                "El correo electrónico no existe en la base de datos. Por favor, verifica el correo ingresado.",
                "Correo no encontrado",
                JOptionPane.ERROR_MESSAGE
            );
        }
        correoRecuperacion = userEmail;
    }//GEN-LAST:event_recuperarActionPerformed

    private void cambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarActionPerformed
        String codigoIngresado = code.getText(); // Obtener el código ingresado

        // Verificar si el código ingresado es correcto
        if (codigoIngresado.equals(codigoRecuperacion)) {
            loginController.mostrarChangePassword(correoRecuperacion);
        } else {
            // Código incorrecto, mostrar mensaje de error
            JOptionPane.showMessageDialog(
                null,
                "El código ingresado no es válido. Por favor, verifica el código.",
                "Código incorrecto",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_cambiarActionPerformed
    
    public String getCorreoRecuperacion() {
            return correoRecuperacion;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cambiar;
    private javax.swing.JTextField code;
    private javax.swing.JTextField email;
    private javax.swing.JPanel fondoPassword;
    private javax.swing.JButton recuperar;
    // End of variables declaration//GEN-END:variables
}
